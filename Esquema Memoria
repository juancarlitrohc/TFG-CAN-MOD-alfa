1.- Introdución
2.- Objetivos
3.- Diferencias CAN y MOD :
            Mod bus  se mueve solo en la capa de datos y utiliza el RS485 (es de los mas comunes pero se pueden usar otras interfaces) para el transporte de mensajes 
            por el medio fisico.
            MOD se utiliza cuando queremos intercambiar informacion "amplia" entre el maestro y los exclavos mientras que CAN se utiliza mas que nada paraenviar ordenes a los
            actuadores y valores de los sensores (por eso modbus se utiliza en procesos industriales y can se utiliza en automoción).
            
            CAN se codifica en NRZ (no retorno a cero) pag11: https://academica-e.unavarra.es/bitstream/handle/2454/19115/TFG%20Diseño%20de%20una%20Red%20Can%20bus%20-%20Alejandro%20García%20Osés.pdf?sequence=1&isAllowed=y
            CAN: Cuando BOSH lo desarrolló lo hizo en una fpga
            MOD: lo voy a hacer modbus serie aunque tambien se puede hacer modbus tcp/ip y nada mas que nos tendriamos que ocupar de la capa de aplicacion (capa 7).
            RS485: Velocidad de tranmision máxima Hasta 10 mbps
            
4.- Esquema fisico y bases comunicacion
            half-duplex
            Todos leen el mensaje pero solo lo analiza el destinatario
            Trama: |START|DATOS|PARIDAD|FINAL|
            DATOS: |DESTINO|ORDEN|INFORMACION|
            
            lineas high y low para CANBUS
            lineas tx y rx para MODBUS
            
            
            
            Conectar el teclado: https://www.bing.com/images/search?view=detailV2&ccid=%2fUeRZSBR&id=9AD014F6958204A2B2BFFAA4FAAAF72882DD2944&thid=OIP._UeRZSBRxAkvgUc3BUhOSwHaIw&mediaurl=http%3a%2f%2fblog.filipeflop.com%2fwp-content%2fuploads%2f2014%2f07%2fCircuito-teclado-4x42.png&exph=1700&expw=1438&q=teclado+con+arduino&simid=608016147641667512&ck=73B7797A656EA4073867DE55C8E43D30&selectedIndex=0&FORM=IRPRST&ajaxhist=0
            
         
            
5.- Esquema Programa
            
6.- Simulaciones.
7.- Pruebas y Demostración física
8.- Conclusiones y Mejoras
            Futuras mejoras (CAN y MOD): ya que tenemos las 2 primeras capas de la pila osi, se podria seguir escalando y construir una pequeña centralita de vehiculo o 
            de una nave industrial y simular diferentes situaciones como mostrar datos de un proceso metalurgico en una pantalla (temperatura, grosor de plancha de aluminio, 
            ventiladores...), dar informacion por un OBD (errores, nº km, consumo...)

9.- Referencias WEB: 
      Implementación CAN LITE VHDL: https://github.com/bggardner/can-lite-vhdl
      TFG MOD BUS intel 8051: http://deeea.urv.cat/public/PROPOSTES/pub/pdf/561pub.pdf
      Implementacion MOD BUS VHDL:  https://github.com/freecores/modbus/tree/master/enlace
      TFG CAN BUS Arduino:  https://academica-e.unavarra.es/bitstream/handle/2454/19115/TFG%20Diseño%20de%20una%20Red%20Can%20bus%20-%20Alejandro%20García%20Osés.pdf?sequence=1&isAllowed=y
      TFG MOD BUS Arduino:  http://bibing.us.es/proyectos/abreproy/91400/fichero/Memoria+TFG+JJRB.pdf
      
      INTERFAZ RS485: https://www.virtual-serial-port.org/es/article/what-is-serial-port/rs485-pinout/
      INTERFAZ UART:  http://soloelectronicos.com/2015/11/05/todo-lo-que-necesita-saber-sobre-los-interfaces-serie/
      
      Pines Arduino UNO: https://hetpro-store.com/TUTORIALES/pines-arduino/
      RS485 ARDUINO UNO: https://naylampmechatronics.com/blog/37_Comunicación-RS485-con-Arduino.html
      RS485 Arduino: en este no utilizan resistencia de 120ohm: https://arduinoinfo.mywikis.net/wiki/SoftwareSerialRS485Example
                     sin embargo en este si: https://giltesa.com/2016/03/04/test-de-comunicacion-entre-arduinos-con-estandar-rs485-mediante-modulos-max485
                     varias cositas: http://arduinoinfo.mywikis.net/wiki/RS485-Modules
      

10.- Terminos:
            topologia multidrop.
            linea TX y RX: lineas dedicadas a la transmision y recepcion de datos.
            OBD: sistema de diagnóstico de vehículos.
